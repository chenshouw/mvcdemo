<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="false"
	xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<context:component-scan base-package="com.neuedu.mvcdemo"></context:component-scan>

	<!-- 使用数据库连接池技术优化数据连接 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin://localhost:1521/orcl" />
		<property name="username" value="qxcms" />
		<property name="password" value="123456" />
	</bean>

	<!-- 2.配置mybatis的sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 配置mybatis的session工厂使用spring的数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 关联mybatis核心配置文件 -->
		<property name="configLocation" value="classpath:config/mybatis-config.xml"></property>
	</bean>

	<!-- 3.配置mybatis的mapper接口扫描配置类，用于配置mapper.xml/接口所在的package包 即：扫描mybatis的代理类所在的package -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 批量扫描mapper,如果扫描多个包，每个包中间使用半角逗号分隔 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<property name="basePackage" value="com.neuedu.mvcdemo.dao" />
	</bean>


	<!-- 4. 事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 5. 使用声明式事务 transaction-manager：引用上面定义的事务管理器 -->
	<tx:annotation-driven transaction-manager="txManager" />

</beans>